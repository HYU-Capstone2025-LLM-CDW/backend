services:
  postgres:
    image: postgres:15
    container_name: postgres-container
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    networks:
      - omop-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # FastAPI Backend Service
  fastapi:
    build:
      context: .
    container_name: fastapi-container
    env_file:
      - .env
    ports:
      - "8000:8000"
    environment:
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      DATABASE_URL: ${POSTGRES_DB_URL}
      DB_HOST: ${POSTGRES_DB_HOST}
      DB_PORT: ${POSTGRES_DB_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - omop-network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:

networks:
  omop-network:
    external: true
